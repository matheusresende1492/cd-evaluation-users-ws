#UserModel class
user.name.must.not.be.null.or.empty=User's name must not be null or empty.
user.email.must.not.be.null.or.empty=User's email must not be null or empty.
user.password.must.not.be.null.or.empty=User's password must not be null or empty.
user.address.must.not.be.null=User's address must not be null.
user.roles.must.not.be.null=User's roles must not be null.

#UserRole class
invalid.role=Invalid role.

#UserAddress class
user.address.number.must.not.be.null.or.empty=User's address number must not be null or empty.
user.address.street.must.not.be.null.or.empty=User's address street must not be null or empty.
user.address.neighborhood.must.not.be.null.or.empty=User's address neighborhood must not be null or empty.
user.address.zip.code.must.not.be.null.or.empty=User's address zip code must not be null or empty.
user.address.country.must.not.be.null.or.empty=User's address country must not be null or empty.
user.address.state.must.not.be.null.or.empty=User's address state must not be null or empty.
user.address.brazil.state.invalid=User's address invalid brazil state.
brazil.state.invalid=Invalid brazil state.

#InternalException class
http.error.500=HTTP ERROR 500
http.error.400=HTTP ERROR 400
http.error.404=HTTP ERROR 404
error.while.deleting.resource=Error deleting resource.

#CustomAuthenticationFilter class
authorization.cannot.be.null.or.empty=Authorization cannot be null or empty.
credentials.number.of.arguments.invalid=Credentials number of arguments invalid.

#ValidCountry interface
country.invalid=Invalid country.